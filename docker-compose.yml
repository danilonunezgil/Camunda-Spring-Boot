version: '3.8'

services:
  camunda-spring-boot:
    container_name: camunda-spring-boot
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL}
      CAMUNDA_BPM_ADMIN_USER_ID: ${CAMUNDA_BPM_ADMIN_USER_ID}
      CAMUNDA_BPM_ADMIN_USER_PASSWORD: ${CAMUNDA_BPM_ADMIN_USER_PASSWORD}
      CAMUNDA_BPM_ADMIN_USER_FIRST_NAME: ${CAMUNDA_BPM_ADMIN_USER_FIRST_NAME}
      CAMUNDA_BPM_ADMIN_USER_LAST_NAME: ${CAMUNDA_BPM_ADMIN_USER_LAST_NAME}
      CAMUNDA_BPM_ADMIN_USER_EMAIL: ${CAMUNDA_BPM_ADMIN_USER_EMAIL}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    image: postgres:14
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s
    restart: unless-stopped

volumes:
  postgres-data:
